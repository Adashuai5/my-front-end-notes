{"root":{"data":{"id":"7233111dfc68","created":1586072817,"text":"前端开发知识图谱","priority":null},"children":[{"data":{"id":"c1u27o3w40g0","created":1586169646494,"text":"CSS","layout_mind_offset":{"x":-933,"y":578},"layout":null,"expandState":"expand"},"children":[{"data":{"id":"c1u43mpn0g00","created":1586174972218,"text":"盒模型"},"children":[]},{"data":{"id":"c1u43umexl40","created":1586174989438,"text":"垂直居中"},"children":[]},{"data":{"id":"c1u43xr2teo0","created":1586174996250,"text":"flex","hyperlink":"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html","hyperlinkTitle":""},"children":[]},{"data":{"id":"c1u43yvlo880","created":1586174998700,"text":"BFC"},"children":[]},{"data":{"id":"c1u44d9ydio0","created":1586175030043,"text":"选择器优先级","note":"[优先级 和 CSS 预处理](https://adashuai5.github.io/2018/12/20/%E4%BC%98%E5%85%88%E7%BA%A7-%E5%92%8C-CSS-%E9%A2%84%E5%A4%84%E7%90%86/)"},"children":[]},{"data":{"id":"c1u44gsqf9c0","created":1586175037709,"text":"清除浮动"},"children":[]},{"data":{"id":"c1u7l2ax75s0","created":1586184801678,"text":"预处理"},"children":[{"data":{"id":"c1u7l5vvp9s0","created":1586184809475,"text":"Less"},"children":[]},{"data":{"id":"c1u7lakph7c0","created":1586184819684,"text":"Sass"},"children":[]}]},{"data":{"id":"c3q1bbnec7c0","created":1593073188775,"text":"display：none 和 overflow：hidden=>v-if 和 v-show=>（重流重绘）"},"children":[]}]},{"data":{"id":"c1u27u91xkg0","created":1586169659867,"text":"HTML","layout_mind_offset":{"x":-687,"y":-100},"layout":null},"children":[{"data":{"id":"c1u41ik6ze00","created":1586174806454,"text":"语义化"},"children":[]},{"data":{"id":"c1u42ogm9b40","created":1586174897662,"text":"meta viewport ","note":"<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1\">"},"children":[]}]},{"data":{"id":"c1u28g00tso0","created":1586169707210,"text":"Node.js","layout_mind_offset":{"x":60,"y":-89},"layout":null},"children":[{"data":{"id":"c1u465qi76w0","created":1586175170358,"text":"stream","layout":null},"children":[]},{"data":{"id":"c1u7m64yd800","created":1586184888388,"text":"框架"},"children":[{"data":{"id":"c1u7y96b9yw0","created":1586185835371,"text":"express"},"children":[]}]}]},{"data":{"id":"c1u3thgc1z40","created":1586174177130,"text":"JavaScript","layout_mind_offset":{"x":36,"y":-453},"expandState":"expand","layout":null,"layout_right_offset":{"x":-86,"y":-334}},"children":[{"data":{"id":"c1u27h36x4g0","created":1586169631214,"text":"基础","expandState":"expand","layout_right_offset":{"x":-43,"y":-15},"layout_left_offset":{"x":-23,"y":-175},"layout":null},"children":[{"data":{"id":"c1u3wlcn3xc0","created":1586174420707,"text":"数据类型","expandState":"expand","layout_left_offset":{"x":-49,"y":194},"layout_right_offset":{"x":-5,"y":311}},"children":[{"data":{"id":"c1u29cizyts0","created":1586169778014,"text":"基础类型","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c1u2a0ltem00","created":1586169830427,"text":"String","layout":null},"children":[]},{"data":{"id":"c1u2a8t1bfk0","created":1586169848278,"text":"Boolean","layout":null},"children":[]},{"data":{"id":"c1u2aiek96w0","created":1586169869171,"text":"Number","layout":null},"children":[]},{"data":{"id":"c1u2aoulag80","created":1586169883201,"text":"Undefined","layout":null},"children":[]},{"data":{"id":"c1u2awo32lk0","created":1586169900222,"text":"Null","layout":null},"children":[]},{"data":{"id":"c1u2huu3wxk0","created":1586170444781,"text":"BigInt(ES2020)","layout":null,"note":"ES2020 的新基础类型\n\n用来表示**大于 2^53 的整数**\n\n弥补 Number 类型的不足"},"children":[]}]},{"data":{"id":"c1u2j5gir7k0","created":1586170546269,"text":"Object","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c1u2jebwlnk0","created":1586170565581,"text":"Object","layout":null},"children":[]},{"data":{"id":"c1u2jlpy5ls0","created":1586170581667,"text":"Array","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c20jkxxeipc0","created":1586828005212,"text":"构造函数方法","expandState":"expand"},"children":[{"data":{"id":"c20jlbx6jaw0","created":1586828035673,"text":"Array.of","note":"用于将参数依次转化为数组中的一项，然后返回这个新数组\n\n与 Array 构造器区别\n\nArray.of(8.0); // [8]\nArray(8.0); // [empty × 8]\n"},"children":[]},{"data":{"id":"c20jlgfq5y00","created":1586828045502,"text":"Array.from","note":"用于将两类对象转为真正的数组：类似数组的对象（array-like object）和可遍历（iterable）的对象（包括 ES6 新增的数据结构 Set 和 Map）"},"children":[]},{"data":{"id":"c20jljwdio00","created":1586828053039,"text":"Array.isArray","note":"let a = []\n此前只有\nObject.prototype.toString.apply(a) === '[object Array]' 能正确判断\n\n现在可以 Array.isArray(a)"},"children":[]}]},{"data":{"id":"c20jfxgrpx40","created":1586827612385,"text":"改变自身方法（9）","expandState":"expand"},"children":[{"data":{"id":"c20jgjh4yeg0","created":1586827660297,"text":"pop"},"children":[]},{"data":{"id":"c20jgn7l8r40","created":1586827668427,"text":"push"},"children":[]},{"data":{"id":"c20jgpbca000","created":1586827673007,"text":"shift"},"children":[]},{"data":{"id":"c20jgrqrkq00","created":1586827678293,"text":"unshift"},"children":[]},{"data":{"id":"c20jgu3enww0","created":1586827683411,"text":"reverse"},"children":[]},{"data":{"id":"c20jhpdo21c0","created":1586827751512,"text":"sort"},"children":[]},{"data":{"id":"c20jgza88mw0","created":1586827694708,"text":"splice"},"children":[]},{"data":{"id":"c20jh43k1n40","created":1586827705188,"text":"fill(ES6)"},"children":[]},{"data":{"id":"c20jha24rds0","created":1586827718163,"text":"copyWith(ES6)","note":"复制数组内部指定位置的成员到其他位置（会覆盖原有成员），然后返回当前数组"},"children":[]}]},{"data":{"id":"c20jg8goztc0","created":1586827636325,"text":"不改变自身方法（8+1）","expandState":"expand"},"children":[{"data":{"id":"c20jhusaefk0","created":1586827763280,"text":"concat"},"children":[]},{"data":{"id":"c20jhwwq91s0","created":1586827767902,"text":"join"},"children":[]},{"data":{"id":"c20ji112xyg0","created":1586827776872,"text":"slice"},"children":[]},{"data":{"id":"c20ji2d7hns0","created":1586827779782,"text":"toString"},"children":[]},{"data":{"id":"c20ji5gc8bk0","created":1586827786502,"text":"toLocaleString"},"children":[]},{"data":{"id":"c20jif364so0","created":1586827807474,"text":"indexOf"},"children":[]},{"data":{"id":"c20jimdtnzc0","created":1586827823355,"text":"lastIndexOf"},"children":[]},{"data":{"id":"c20jii2rby80","created":1586827813979,"text":"includes(ES7)"},"children":[]},{"data":{"id":"c20jk1z88mw0","created":1586827935665,"text":"toSource(非标准)"},"children":[]}]},{"data":{"id":"c20m0gqdibc0","created":1586834863828,"text":"遍历方法(12)","expandState":"expand"},"children":[{"data":{"id":"c20m0mkhc1s0","created":1586834876532,"text":"forEach"},"children":[]},{"data":{"id":"c20m0qxxbjc0","created":1586834886052,"text":"every"},"children":[]},{"data":{"id":"c20m0tjfljk0","created":1586834891707,"text":"some"},"children":[]},{"data":{"id":"c20m0var46w0","created":1586834895535,"text":"filter"},"children":[]},{"data":{"id":"c20m10vht5s0","created":1586834907673,"text":"map"},"children":[]},{"data":{"id":"c20m1twlmds0","created":1586834970867,"text":"reduce"},"children":[]},{"data":{"id":"c20m1wb32200","created":1586834976096,"text":"reduceRight"},"children":[]},{"data":{"id":"c20m200mcww0","created":1586834984171,"text":"entries(ES6)"},"children":[]},{"data":{"id":"c20m29szqso0","created":1586835005477,"text":"find&&findIndex(ES6)"},"children":[]},{"data":{"id":"c20m2jbs3c80","created":1586835026204,"text":"keys(ES6)"},"children":[]},{"data":{"id":"c20m2m36xlc0","created":1586835032215,"text":"values(ES6)"},"children":[]},{"data":{"id":"c20m2pwuszs0","created":1586835040539,"text":"Symbol.iterator(ES6)"},"children":[]}]},{"data":{"id":"c20rh6b6kow0","created":1586850278882,"text":"Array 构造器","layout_right_offset":{"x":-5.833333101537448,"y":-349.9999860922501}},"children":[]}]},{"data":{"id":"c1u2jq97gy00","created":1586170591539,"text":"Function","layout":null},"children":[]},{"data":{"id":"c1u2jtbhu6w0","created":1586170598208,"text":"RegExp","layout":null},"children":[]},{"data":{"id":"c1u2jzbmihs0","created":1586170611276,"text":"Date","layout":null},"children":[]},{"data":{"id":"c1u7oxrpo2w0","created":1586185105266,"text":"Math"},"children":[]},{"data":{"id":"c1u7p0jdfgg0","created":1586185111292,"text":"JSON"},"children":[]},{"data":{"id":"c1u2k9mxacg0","created":1586170633727,"text":"Set","layout":null},"children":[]},{"data":{"id":"c1u2kbkfa5s0","created":1586170637930,"text":"Map","layout":null},"children":[]},{"data":{"id":"c1u2kdjqao80","created":1586170642241,"text":"WeakSet ","layout":null},"children":[]},{"data":{"id":"c1u2kok70bk0","created":1586170666214,"text":"WeakMap","layout":null},"children":[]}]}]},{"data":{"id":"c1u7o4a9e140","created":1586185041084,"text":"DOM","layout_right_offset":{"x":255,"y":68}},"children":[{"data":{"id":"c25xgpm0pjk0","created":1587374968975,"text":"事件模型","layout_right_offset":{"x":335,"y":45}},"children":[]},{"data":{"id":"c3q1h8mru4g0","created":1593073652392,"text":"监听器"},"children":[{"data":{"id":"c3q1hd3uyxs0","created":1593073662133,"text":"passive 的事件监听器","hyperlink":"https://www.cnblogs.com/ziyunfei/p/5545439.html","hyperlinkTitle":"passive 的事件监听器","layout_left_offset":{"x":-21,"y":186},"note":"与 Node.appendChild() 的差异：\nParentNode.append()允许追加  DOMString 对象，而 Node.appendChild() 只接受 Node 对象。\nParentNode.append() 没有返回值，而 Node.appendChild() 返回追加的 Node 对象。\nParentNode.append() 可以追加多个节点和字符串，而 Node.appendChild() 只能追加一个节点"},"children":[]}]},{"data":{"id":"c3q1i3qd52w0","created":1593073720090,"text":"ParentNode.append()"},"children":[]}]},{"data":{"id":"c1u3www3m080","created":1586174445828,"text":"浏览器环境","layout_left_offset":{"x":464,"y":-454},"layout_right_offset":{"x":258,"y":-412},"expandState":"collapse"},"children":[{"data":{"id":"c1u7nydd23k0","created":1586185028211,"text":"AJAX","layout_right_offset":{"x":252,"y":-18},"note":"```\nconst request = new XMLHttpRequest()\n\nrequest.open('GET','/xxx?name=ada',true)\nrequest.onreadystatechange = function() {\n\tif(request.readyState === 4 && request.status === 200) {\n    \tconsole.log(request.responseText)\n    }\n}\nrequest.send()\n```"},"children":[]},{"data":{"id":"c1u831f1jww0","created":1586186210305,"text":"同源政策","layout_right_offset":{"x":259,"y":16}},"children":[{"data":{"id":"c1u83sr4xcg0","created":1586186269809,"text":"跨域","layout_right_offset":{"x":188,"y":0}},"children":[{"data":{"id":"c1u83ztfurk0","created":1586186285186,"text":"CORS","layout_right_offset":{"x":199,"y":73},"note":"Cross-Origin Resource Sharing 跨域资源共享"},"children":[]},{"data":{"id":"c1u843z0t0g0","created":1586186294231,"text":"JSONP","layout_right_offset":{"x":223,"y":-59},"note":"通过 script 标签加载异步数据执行 JavaSCript 操作的方式"},"children":[]}]}]},{"data":{"id":"c25xbhlhigg0","created":1587374559707,"text":"安全","layout_right_offset":{"x":344,"y":35},"expandState":"expand","layout_left_offset":{"x":383,"y":153}},"children":[{"data":{"id":"c25xbnrra7s0","created":1587374573147,"text":"CSRF","layout_right_offset":{"x":164,"y":-13},"note":"跨站请求攻击，简单地说，是攻击者通过一些技术手段欺骗用户的浏览器去访问一个自己曾经认证过的网站并运行一些操作（如发邮件，发消息，甚至财产操作如转账和购买商品）。\n由于浏览器曾经认证过，所以被访问的网站会认为是真正的用户操作而去运行。\n这利用了web中用户身份验证的一个漏洞：简单的身份验证只能保证请求发自某个用户的浏览器，却不能保证请求本身是用户自愿发出的。\nCSRF并不能够拿到用户的任何信息，它只是欺骗用户浏览器，让其以用户的名义进行操作\n\n浏览器会自动带上cookie，而浏览器不会自动带上token\n\n用token代替cookie能防止CSRF攻击"},"children":[]},{"data":{"id":"c25xbwpoz8g0","created":1587374592614,"text":"XSS","layout_right_offset":{"x":184,"y":21},"note":"用户通过各种方式将恶意代码注入到其他用户的页面中。就可以通过脚本获取信息，发起请求，之类的操作"},"children":[]},{"data":{"id":"c25xdy3uv9s0","created":1587374752375,"text":"cookie","note":"登陆后后端生成一个sessionid放在cookie中返回给客户端，并且服务端一直记录着这个sessionid，客户端以后每次请求都会带上这个sessionid，服务端通过这个sessionid来验证身份之类的操作。所以别人拿到了cookie拿到了sessionid后，就可以完全替代你"},"children":[]},{"data":{"id":"c25xehdc7ko0","created":1587374794307,"text":"token","note":"登陆后后端不返回一个token给客户端，客户端将这个token存储起来，然后每次客户端请求都需要开发者手动将token放在header中带过去，服务端每次只需要对这个token进行验证就能使用token中的信息来进行下一步操作了。"},"children":[]}]}]},{"data":{"id":"c1u7nrhui3s0","created":1586185013244,"text":"异步","layout_right_offset":{"x":275,"y":-209},"expandState":"collapse"},"children":[{"data":{"id":"c1u7sigkk4w0","created":1586185385397,"text":"Promise","layout_right_offset":{"x":213,"y":-30},"note":"一种异步编程的解决方案\n\n（回调地狱）\n\n必须接收一个函数"},"children":[]},{"data":{"id":"c1u7sju0b140","created":1586185388386,"text":"定时器","layout_right_offset":{"x":209,"y":49}},"children":[]},{"data":{"id":"c3wnxsjmjs00","created":1593746373722,"text":"Eventloop","hyperlink":"https://juejin.im/post/5ab7677f6fb9a028d56711d0","hyperlinkTitle":""},"children":[]},{"data":{"id":"c3wo53iczw80","created":1593746946140,"text":"nextTick","note":"```\nlet counter = 1;\nlet observer = new MutationObserver(fn);\nlet textNode = document.createTextNode(String(counter));\n\nobserver.observe(textNode, {\n  characterData: true\n});\n\ncounter = counter + 1;\ntextNode.data = String(counter);\n```"},"children":[]}]}]},{"data":{"id":"c1u3yrcgm1s0","created":1586174590485,"text":"框架","layout_right_offset":{"x":-13,"y":288},"expandState":"expand"},"children":[{"data":{"id":"c1u46snfyrk0","created":1586175220239,"text":"vue","expandState":"collapse"},"children":[{"data":{"id":"c1u4722t45k0","created":1586175240759,"text":"vue-cli"},"children":[]},{"data":{"id":"c1u47513t600","created":1586175247186,"text":"vuex","layout":null},"children":[{"data":{"id":"c2k3xi46w280","created":1588815050903,"text":"观察者模式"},"children":[]}]},{"data":{"id":"c1u4772pfxk0","created":1586175251637,"text":"vue-router"},"children":[{"data":{"id":"c1u7es70njs0","created":1586184309489,"text":"路由","note":"[【前端路由】这可能是最容易理解的一篇了](https://adashuai5.github.io/2020/04/04/hash-%E6%A8%A1%E5%BC%8F%E5%92%8C-history-%E6%A8%A1%E5%BC%8F%E5%B0%8F%E8%AE%B0/)","layout_right_offset":{"x":-1,"y":-2}},"children":[]}]},{"data":{"id":"c25xhyj1g1c0","created":1587375066750,"text":"原理"},"children":[{"data":{"id":"c25xi5f9la00","created":1587375081759,"text":"响应式","note":"Object.defineProperty() => proxy\n\n前者缺点：\n1. Object.defineProperty()这个api无法原生的对数组进行响应式监听\nVue 如何解决的？\nvue 改写了数组的 push, pop, shift, unshift, sort, reverse\n2. 实现过程中对于深度嵌套的数据，递归消耗大量性能\n3. 没办法监听到后续的手动新增删除属性元素，比如数组，直接通过索引去设置和改变值是不会触发视图更新的，当然vue为我们提供了vue.set和vue.delete这样的api，但终究是不方便的\n\n后者解决：\n1. Proxy支持监听原生数组\n2. Proxy的获取数据，只会递归到需要获取的层级，不会继续递归\n3. Proxy可以监听数据的手动新增和删除\n\n缺点在于Proxy和Reflect的浏览器兼容问题，且无法被polyfill。\n"},"children":[]},{"data":{"id":"c25xigfzrjk0","created":1587375105748,"text":"virtual DOM","note":"\n\n\n\nvue/react 提供的 key 在此的作用\n1. 更准确\n因为带key就不是就地复用了，在sameNode函数 a.key === b.key对比中可以避免就地复用的情况。所以会更加准确。\n\n2. 更快\n利用key的唯一性生成map对象来获取对应节点，比遍历方式更快。(这个观点，就是我最初的那个观点。从这个角度看，map会比遍历更快。"},"children":[]}]}]},{"data":{"id":"c1u46urk7q00","created":1586175224841,"text":"react","expandState":"collapse"},"children":[{"data":{"id":"c2k3y1ihq880","created":1588815093126,"text":"redux"},"children":[{"data":{"id":"c2k3y8zw1jc0","created":1588815109416,"text":"react-redux"},"children":[]}]},{"data":{"id":"c2k3ylaifa00","created":1588815136180,"text":"create-react-app"},"children":[]},{"data":{"id":"c2k3z1begvs0","created":1588815171062,"text":"中间件"},"children":[{"data":{"id":"c2k3zwbjmpc0","created":1588815238551,"text":"react-thunk"},"children":[]}]},{"data":{"id":"c2k3zna7zuw0","created":1588815218880,"text":"react-router"},"children":[]},{"data":{"id":"c2k40way5pk0","created":1588815316879,"text":"动画"},"children":[{"data":{"id":"c2k40z1k3e80","created":1588815322841,"text":"react-transition-group"},"children":[]}]},{"data":{"id":"c2k41mwvjm00","created":1588815374801,"text":"升级功能","expandState":"expand"},"children":[{"data":{"id":"c2k3yvhuops0","created":1588815158391,"text":"react-hooks"},"children":[]},{"data":{"id":"c2k422ld3gw0","created":1588815408934,"text":"portal"},"children":[]}]},{"data":{"id":"c3lv1ubsu540","created":1592649279305,"text":"面试","hyperlink":"https://juejin.im/post/5e6c3bd4518825495a278e75#heading-0","hyperlinkTitle":""},"children":[]},{"data":{"id":"c3lve81fpiw0","created":1592650249523,"text":"生命周期","image":"https://kityminder-img.gz.bcebos.com/924575439c69ac71faae2e38ef38ca0df349f33e","imageTitle":"","imageSize":{"width":200,"height":78}},"children":[{"data":{"id":"c3nq4hxd11k0","created":1592838501767,"text":"shouldComponentUpdate "},"children":[]}]}]},{"data":{"id":"c1u47dpjnpc0","created":1586175266078,"text":"axios"},"children":[{"data":{"id":"c1u7ka4zzhs0","created":1586184740370,"text":"interrupter"},"children":[]}]},{"data":{"id":"c1u7ix1128g0","created":1586184633467,"text":"思想","expandState":"collapse"},"children":[{"data":{"id":"c1u7j0ij5bs0","created":1586184641056,"text":"虚拟 DOM"},"children":[]},{"data":{"id":"c1u7j4v147k0","created":1586184650519,"text":"响应式"},"children":[]},{"data":{"id":"c1u7joagff40","created":1586184692810,"text":"组件化"},"children":[]},{"data":{"id":"c1u7jxpgzj40","created":1586184713309,"text":"MVVM/MVC"},"children":[]}]}]},{"data":{"id":"c1u47s90ipc0","created":1586175297731,"text":"工程化","layout_right_offset":{"x":431,"y":-106},"expandState":"expand"},"children":[{"data":{"id":"c1u7kr9fpgg0","created":1586184777643,"text":"webpack"},"children":[]},{"data":{"id":"c1u7kv18xpc0","created":1586184785855,"text":"babel"},"children":[]}]},{"data":{"id":"c1u7gigwhtk0","created":1586184445047,"text":"面向对象","layout_right_offset":{"x":-43,"y":-696},"expandState":"collapse"},"children":[{"data":{"id":"c1u44s84da80","created":1586175062584,"text":"闭包","layout_left_offset":{"x":-54,"y":166},"layout_right_offset":{"x":-7,"y":10}},"children":[]},{"data":{"id":"c1u7rkx9s8g0","created":1586185312396,"text":"原型"},"children":[]},{"data":{"id":"c1u7rq5dwy00","created":1586185323771,"text":"this"},"children":[]},{"data":{"id":"c1u7s1h5pgg0","created":1586185348427,"text":"继承"},"children":[]}]},{"data":{"id":"c1u7n7vdqvk0","created":1586184970527,"text":"函数式","layout":null},"children":[]},{"data":{"id":"c1u4a661l3s0","created":1586175484754,"text":"语言升级","expandState":"expand","layout_right_offset":{"x":-12,"y":-689}},"children":[{"data":{"id":"c1u4a1x3xkg0","created":1586175475507,"text":"TypeScript","note":"JavaScript 的超集，提供类型检查"},"children":[]},{"data":{"id":"c1u4afz1cmo0","created":1586175506098,"text":"ES6","note":"标准化组织 ECMA 对 JavaScript 制订的标准\n\nES6 既是一个历史名词，也是一个泛指，含义是 5.1 版以后的 JavaScript 的下一代标准（ES2015-2020）"},"children":[{"data":{"id":"c1u4byiho0o0","created":1586175624821,"text":"变量声明","note":"与 var 相比：不允许重复声明、有作用域、无变量提升，声明属性不属于顶层对象（全局环境）\n\nlet：变量\n\nconst：常量（内存地址不变）\n\nglobalThis（ES2020）：可访问任何环境下的顶层对象，指向全局环境下的 this"},"children":[]}]}]}]},{"data":{"id":"c1u3xmnlmwg0","created":1586174501910,"text":"底层","layout_mind_offset":{"x":605,"y":-237},"expandState":"expand"},"children":[{"data":{"id":"c1u28b8knc00","created":1586169696843,"text":"网络","layout":null},"children":[{"data":{"id":"c3q1frysqeo0","created":1593073537750,"text":"HTTP"},"children":[{"data":{"id":"c3q1fvivpnk0","created":1593073545495,"text":"缓存","layout_right_offset":{"x":-148,"y":-152},"note":"头部|优势和特点|劣势和问题\n---|---|---\nExpires|1. HTTP 1.0 产物，可以在HTTP 1.0和1.1中使用，简单易用。2. 以时刻标识失效时间。|1. 时间是由服务器发送的(UTC)，如果服务器时间和客户端时间存在不一致，可能会出现问题。2. 存在版本问题，到期之前的修改客户端是不可知的。\nCache-Control|1. HTTP 1.1 产物，以时间间隔标识失效时间，解决了Expires服务器和客户端相对时间的问题。2. 比Expires多了很多选项设置。|1. HTTP 1.1 才有的内容，不适用于HTTP 1.0 。2. 存在版本问题，到期之前的修改客户端是不可知的。\nLast-Modified|1. 不存在版本问题，每次请求都会去服务器进行校验。服务器对比最后修改时间如果相同则返回304，不同返回200以及资源内容。|1. 只要资源修改，无论内容是否发生实质性的变化，都会将该资源返回客户端。例如周期性重写，这种情况下该资源包含的数据实际上一样的。2. 以时刻作为标识，无法识别一秒内进行多次修改的情况。3. 某些服务器不能精确的得到文件的最后修改时间。\nETag|1、可以更加精确的判断资源是否被修改，可以识别一秒内多次修改的情况。2. 不存在版本问题，每次请求都回去服务器进行校验。|1. 计算ETag值需要性能损耗。2. 分布式服务器存储的情况下，计算ETag的算法如果不一样，会导致浏览器从一台服务器上获得页面内容后到另外一台服务器上进行验证时发现ETag不匹配的情况。","image":"https://kityminder-img.gz.bcebos.com/29c0e9423d6e7a57ec860b61a6cc50b59d479ef7","imageTitle":"","imageSize":{"width":200,"height":121}},"children":[{"data":{"id":"c3q1fylr0r40","created":1593073552198,"text":"强缓存(200 from cache)","priority":3},"children":[{"data":{"id":"c3q1gbjqbtc0","created":1593073580374,"text":"Expires（http1.0）","priority":2},"children":[]},{"data":{"id":"c3q1gf2ebfk0","created":1593073588034,"text":"Cache-Control\n（http1.1）","priority":1},"children":[]}]},{"data":{"id":"c3q1g7db8iw0","created":1593073571279,"text":"协商缓存(304)","priority":2,"layout_right_offset":{"x":-36,"y":-22}},"children":[{"data":{"id":"c3q1gk5rc6w0","created":1593073599121,"text":"Last-Modified\n（http1.1）"},"children":[]},{"data":{"id":"c3q1gorccd40","created":1593073609133,"text":"ETag：唯一标志符（比如md5标志）"},"children":[]}]},{"data":{"id":"c3q1nja3egw0","created":1593074145755,"text":"禁用缓存","layout_right_offset":{"x":-10,"y":-335},"priority":1},"children":[{"data":{"id":"c3q1ntwdwjc0","created":1593074168871,"text":"Pragma（http1.0）设定为 no-cache"},"children":[]}]}]}]}]},{"data":{"id":"c1u48to7g0w0","created":1586175379190,"text":"算法"},"children":[]},{"data":{"id":"c1u48wtmqu80","created":1586175386049,"text":"计算机原理"},"children":[]}]},{"data":{"id":"c1u48hzzdnc0","created":1586175353781,"text":"工具","layout_mind_offset":{"x":727,"y":-42},"expandState":"expand"},"children":[{"data":{"id":"c1u46c0j8i80","created":1586175184025,"text":"vscode"},"children":[]},{"data":{"id":"c1u283bwbgo0","created":1586169679630,"text":"Git","layout":null},"children":[]},{"data":{"id":"c1u7lzxupds0","created":1586184874898,"text":"webstrom"},"children":[]}]}]},"template":"filetree","theme":"classic-compact","version":"1.4.43"}